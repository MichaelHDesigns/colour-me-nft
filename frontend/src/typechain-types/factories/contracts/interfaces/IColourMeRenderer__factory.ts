/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IColourMeRenderer,
  IColourMeRendererInterface,
} from "../../../contracts/interfaces/IColourMeRenderer";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes3",
            name: "color0",
            type: "bytes3",
          },
          {
            internalType: "bytes3",
            name: "color1",
            type: "bytes3",
          },
          {
            internalType: "bytes3",
            name: "color2",
            type: "bytes3",
          },
          {
            internalType: "bytes3",
            name: "color3",
            type: "bytes3",
          },
          {
            internalType: "bytes3",
            name: "color4",
            type: "bytes3",
          },
          {
            internalType: "enum Path",
            name: "shape0",
            type: "uint8",
          },
          {
            internalType: "enum Path",
            name: "shape1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "polygon",
            type: "uint8",
          },
        ],
        internalType: "struct Trait",
        name: "_trait",
        type: "tuple",
      },
    ],
    name: "getAttributes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_baseURL",
        type: "string",
      },
      {
        internalType: "string",
        name: "_svg",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bytes3",
            name: "color0",
            type: "bytes3",
          },
          {
            internalType: "bytes3",
            name: "color1",
            type: "bytes3",
          },
          {
            internalType: "bytes3",
            name: "color2",
            type: "bytes3",
          },
          {
            internalType: "bytes3",
            name: "color3",
            type: "bytes3",
          },
          {
            internalType: "bytes3",
            name: "color4",
            type: "bytes3",
          },
          {
            internalType: "enum Path",
            name: "shape0",
            type: "uint8",
          },
          {
            internalType: "enum Path",
            name: "shape1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "polygon",
            type: "uint8",
          },
        ],
        internalType: "struct Trait",
        name: "_trait",
        type: "tuple",
      },
    ],
    name: "getURI",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "base",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "additionalPoints",
            type: "bytes",
          },
        ],
        internalType: "struct Object[]",
        name: "_objects",
        type: "tuple[]",
      },
    ],
    name: "renderObjects",
    outputs: [
      {
        internalType: "bytes",
        name: "paths",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum Path",
            name: "shape",
            type: "uint8",
          },
          {
            internalType: "bytes3",
            name: "color",
            type: "bytes3",
          },
          {
            internalType: "uint8",
            name: "stroke",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "pointsLength",
            type: "uint16",
          },
        ],
        internalType: "struct BaseObject",
        name: "_object",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int16",
            name: "x",
            type: "int16",
          },
          {
            internalType: "int16",
            name: "y",
            type: "int16",
          },
        ],
        internalType: "struct Point[]",
        name: "_points",
        type: "tuple[]",
      },
    ],
    name: "renderPath",
    outputs: [
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_polygon",
        type: "uint8",
      },
    ],
    name: "renderPolygon",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Path",
        name: "_shape",
        type: "uint8",
      },
    ],
    name: "renderShapeTool",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes3",
            name: "color0",
            type: "bytes3",
          },
          {
            internalType: "bytes3",
            name: "color1",
            type: "bytes3",
          },
          {
            internalType: "bytes3",
            name: "color2",
            type: "bytes3",
          },
          {
            internalType: "bytes3",
            name: "color3",
            type: "bytes3",
          },
          {
            internalType: "bytes3",
            name: "color4",
            type: "bytes3",
          },
          {
            internalType: "enum Path",
            name: "shape0",
            type: "uint8",
          },
          {
            internalType: "enum Path",
            name: "shape1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "polygon",
            type: "uint8",
          },
        ],
        internalType: "struct Trait",
        name: "_traits",
        type: "tuple",
      },
    ],
    name: "renderTrait",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class IColourMeRenderer__factory {
  static readonly abi = _abi;
  static createInterface(): IColourMeRendererInterface {
    return new Interface(_abi) as IColourMeRendererInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IColourMeRenderer {
    return new Contract(address, _abi, runner) as unknown as IColourMeRenderer;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EncodingTest,
  EncodingTestInterface,
} from "../../../contracts/test/EncodingTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
    ],
    name: "InvalidPoints",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "shape",
        type: "uint8",
      },
    ],
    name: "InvalidShape",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "stroke",
        type: "uint8",
      },
    ],
    name: "InvalidStroke",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "tokenId",
        type: "uint16",
      },
    ],
    name: "getArt",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "base",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "additionalPoints",
            type: "bytes",
          },
        ],
        internalType: "struct Object[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "tokenId",
        type: "uint16",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "base",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "additionalPoints",
            type: "bytes",
          },
        ],
        internalType: "struct Object[]",
        name: "art",
        type: "tuple[]",
      },
    ],
    name: "storeArt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "object",
        type: "uint256",
      },
    ],
    name: "testDecodeColor",
    outputs: [
      {
        internalType: "bytes3",
        name: "",
        type: "bytes3",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "object",
        type: "uint256",
      },
    ],
    name: "testDecodePointsLength",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "object",
        type: "uint256",
      },
    ],
    name: "testDecodeShape",
    outputs: [
      {
        internalType: "enum Path",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "object",
        type: "uint256",
      },
    ],
    name: "testDecodeStroke",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "tokenId",
        type: "uint16",
      },
    ],
    name: "unpackArt",
    outputs: [
      {
        components: [
          {
            internalType: "enum Path",
            name: "shape",
            type: "uint8",
          },
          {
            internalType: "bytes3",
            name: "color",
            type: "bytes3",
          },
          {
            internalType: "uint8",
            name: "stroke",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "pointsLength",
            type: "uint16",
          },
        ],
        internalType: "struct BaseObject[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "int16",
            name: "x",
            type: "int16",
          },
          {
            internalType: "int16",
            name: "y",
            type: "int16",
          },
        ],
        internalType: "struct Point[][]",
        name: "",
        type: "tuple[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userArt",
    outputs: [
      {
        internalType: "uint256",
        name: "base",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "additionalPoints",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611e578061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a7a3ec111161005b578063a7a3ec1114610139578063b842bc341461016a578063e0d9bb7e1461019a578063f7b7f3da146101ca57610088565b8063402818741461008d5780635617aaf3146100bd5780639301a7c0146100ed578063a6df62a314610109575b600080fd5b6100a760048036038101906100a29190610ef5565b6101fb565b6040516100b49190610f3e565b60405180910390f35b6100d760048036038101906100d29190610f93565b61020d565b6040516100e4919061115e565b60405180910390f35b61010760048036038101906101029190611411565b610322565b005b610123600480360381019061011e9190610ef5565b6103e6565b60405161013091906114a8565b60405180910390f35b610153600480360381019061014e9190610f93565b6103f8565b604051610161929190611827565b60405180910390f35b610184600480360381019061017f9190610ef5565b610665565b604051610191919061186d565b60405180910390f35b6101b460048036038101906101af9190610ef5565b610677565b6040516101c19190611897565b60405180910390f35b6101e460048036038101906101df91906118b2565b610689565b6040516101f292919061194b565b60405180910390f35b600061020682610752565b9050919050565b60606000808361ffff1661ffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610317578382906000526020600020906002020160405180604001604052908160008201548152602001600182018054610286906119aa565b80601f01602080910402602001604051908101604052809291908181526020018280546102b2906119aa565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b50505050508152505081526020019060010190610249565b505050509050919050565b6000808361ffff1661ffff16815260200190815260200160002060006103489190610d7a565b60005b81518110156103e1576000808461ffff1661ffff168152602001908152602001600020828281518110610381576103806119db565b5b602002602001015190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010190816103d19190611bb6565b505050808060010191505061034b565b505050565b60006103f182610760565b9050919050565b60608060008060008561ffff1661ffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610505578382906000526020600020906002020160405180604001604052908160008201548152602001600182018054610474906119aa565b80601f01602080910402602001604051908101604052809291908181526020018280546104a0906119aa565b80156104ed5780601f106104c2576101008083540402835291602001916104ed565b820191906000526020600020905b8154815290600101906020018083116104d057829003601f168201915b50505050508152505081526020019060010190610437565b5050505090506000815167ffffffffffffffff81111561052857610527611185565b5b60405190808252806020026020018201604052801561056157816020015b61054e610d9e565b8152602001906001900390816105465790505b5090506000825167ffffffffffffffff81111561058157610580611185565b5b6040519080825280602002602001820160405280156105b457816020015b606081526020019060019003908161059f5790505b50905060005b8351811015610656576105ea8482815181106105d9576105d86119db565b5b602002602001015160000151610771565b8382815181106105fd576105fc6119db565b5b602002602001018190525061062b84828151811061061e5761061d6119db565b5b6020026020010151610826565b82828151811061063e5761063d6119db565b5b602002602001018190525080806001019150506105ba565b50818194509450505050915091565b600061067082610ad4565b9050919050565b600061068282610b44565b9050919050565b600060205281600052604060002081815481106106a557600080fd5b9060005260206000209060020201600091509150508060000154908060010180546106cf906119aa565b80601f01602080910402602001604051908101604052809291908181526020018280546106fb906119aa565b80156107485780601f1061071d57610100808354040283529160200191610748565b820191906000526020600020905b81548152906001019060200180831161072b57829003601f168201915b5050505050905082565b6000601b82901c9050919050565b6000600382901c60e81b9050919050565b610779610d9e565b600061078483610ad4565b9050600061079184610760565b9050600061079e85610752565b905060006107ab86610b44565b90506107b78483610b52565b6107c18482610c2c565b60405180608001604052808560058111156107df576107de6114ef565b5b8152602001847cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018360ff1681526020018261ffff16815250945050505050919050565b606060006108378360000151610b44565b905060008161ffff1667ffffffffffffffff81111561085957610858611185565b5b60405190808252806020026020018201604052801561089257816020015b61087f610dff565b8152602001906001900390816108775790505b50905060005b6006811080156108ab57508261ffff1681105b156109405760006020826108bf9190611cb7565b60336108cb9190611cf9565b90506000818760000151901c905060006010836108e89190611cf9565b8860000151901c905060405180604001604052808360010b81526020018260010b81525085858151811061091f5761091e6119db565b5b6020026020010181905250505050808061093890611d2d565b915050610898565b5060005b8460200151516003826109579190611cf9565b10801561097f57508261ffff166004826109719190611da4565b600661097d9190611cf9565b105b15610ac957600085602001516001836109989190611cf9565b815181106109a9576109a86119db565b5b602001015160f81c60f81b60f81c60ff166008876020015184815181106109d3576109d26119db565b5b602001015160f81c60f81b60f81c60ff1661ffff16901b17905060008660200151600384610a019190611cf9565b81518110610a1257610a116119db565b5b602001015160f81c60f81b60f81c60ff1660088860200151600286610a379190611cf9565b81518110610a4857610a476119db565b5b602001015160f81c60f81b60f81c60ff1661ffff16901b17905060405180604001604052808360010b81526020018260010b81525084600485610a8b9190611da4565b6006610a979190611cf9565b81518110610aa857610aa76119db565b5b60200260200101819052505050600481610ac29190611cf9565b9050610944565b508092505050919050565b60008060078316905060058160ff161115610b2657806040517fd353599c000000000000000000000000000000000000000000000000000000008152600401610b1d9190610f3e565b60405180910390fd5b8060ff166005811115610b3c57610b3b6114ef565b5b915050919050565b6000602382901c9050919050565b600580811115610b6557610b646114ef565b5b826005811115610b7857610b776114ef565b5b1480610ba8575060016005811115610b9357610b926114ef565b5b826005811115610ba657610ba56114ef565b5b145b80610bd7575060036005811115610bc257610bc16114ef565b5b826005811115610bd557610bd46114ef565b5b145b8015610be6575060008160ff16145b15610c2857806040517fdd76e354000000000000000000000000000000000000000000000000000000008152600401610c1f9190610f3e565b60405180910390fd5b5050565b60028161ffff161080610cd2575060006005811115610c4e57610c4d6114ef565b5b826005811115610c6157610c606114ef565b5b1480610c91575060026005811115610c7c57610c7b6114ef565b5b826005811115610c8f57610c8e6114ef565b5b145b80610cc0575060016005811115610cab57610caa6114ef565b5b826005811115610cbe57610cbd6114ef565b5b145b8015610cd1575060028161ffff1614155b5b80610d34575060046005811115610cec57610ceb6114ef565b5b826005811115610cff57610cfe6114ef565b5b148015610d11575060038161ffff1614155b8015610d22575060058161ffff1614155b8015610d33575060068161ffff1614155b5b15610d7657806040517fd3c6c3ae000000000000000000000000000000000000000000000000000000008152600401610d6d9190611e06565b60405180910390fd5b5050565b5080546000825560020290600052602060002090810190610d9b9190610e1f565b50565b604051806080016040528060006005811115610dbd57610dbc6114ef565b5b815260200160007cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001600060ff168152602001600061ffff1681525090565b6040518060400160405280600060010b8152602001600060010b81525090565b5b80821115610e4a57600080820160009055600182016000610e419190610e4e565b50600201610e20565b5090565b508054610e5a906119aa565b6000825580601f10610e6c5750610e8b565b601f016020900490600052602060002090810190610e8a9190610e8e565b5b50565b5b80821115610ea7576000816000905550600101610e8f565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610ed281610ebf565b8114610edd57600080fd5b50565b600081359050610eef81610ec9565b92915050565b600060208284031215610f0b57610f0a610eb5565b5b6000610f1984828501610ee0565b91505092915050565b600060ff82169050919050565b610f3881610f22565b82525050565b6000602082019050610f536000830184610f2f565b92915050565b600061ffff82169050919050565b610f7081610f59565b8114610f7b57600080fd5b50565b600081359050610f8d81610f67565b92915050565b600060208284031215610fa957610fa8610eb5565b5b6000610fb784828501610f7e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610ff581610ebf565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561103557808201518184015260208101905061101a565b60008484015250505050565b6000601f19601f8301169050919050565b600061105d82610ffb565b6110678185611006565b9350611077818560208601611017565b61108081611041565b840191505092915050565b60006040830160008301516110a36000860182610fec565b50602083015184820360208601526110bb8282611052565b9150508091505092915050565b60006110d4838361108b565b905092915050565b6000602082019050919050565b60006110f482610fc0565b6110fe8185610fcb565b93508360208202850161111085610fdc565b8060005b8581101561114c578484038952815161112d85826110c8565b9450611138836110dc565b925060208a01995050600181019050611114565b50829750879550505050505092915050565b6000602082019050818103600083015261117881846110e9565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111bd82611041565b810181811067ffffffffffffffff821117156111dc576111db611185565b5b80604052505050565b60006111ef610eab565b90506111fb82826111b4565b919050565b600067ffffffffffffffff82111561121b5761121a611185565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff82111561125b5761125a611185565b5b61126482611041565b9050602081019050919050565b82818337600083830152505050565b600061129361128e84611240565b6111e5565b9050828152602081018484840111156112af576112ae61123b565b5b6112ba848285611271565b509392505050565b600082601f8301126112d7576112d6611180565b5b81356112e7848260208601611280565b91505092915050565b60006040828403121561130657611305611231565b5b61131060406111e5565b9050600061132084828501610ee0565b600083015250602082013567ffffffffffffffff81111561134457611343611236565b5b611350848285016112c2565b60208301525092915050565b600061136f61136a84611200565b6111e5565b905080838252602082019050602084028301858111156113925761139161122c565b5b835b818110156113d957803567ffffffffffffffff8111156113b7576113b6611180565b5b8086016113c489826112f0565b85526020850194505050602081019050611394565b5050509392505050565b600082601f8301126113f8576113f7611180565b5b813561140884826020860161135c565b91505092915050565b6000806040838503121561142857611427610eb5565b5b600061143685828601610f7e565b925050602083013567ffffffffffffffff81111561145757611456610eba565b5b611463858286016113e3565b9150509250929050565b60007fffffff000000000000000000000000000000000000000000000000000000000082169050919050565b6114a28161146d565b82525050565b60006020820190506114bd6000830184611499565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006811061152f5761152e6114ef565b5b50565b60008190506115408261151e565b919050565b600061155082611532565b9050919050565b61156081611545565b82525050565b61156f8161146d565b82525050565b61157e81610f22565b82525050565b61158d81610f59565b82525050565b6080820160008201516115a96000850182611557565b5060208201516115bc6020850182611566565b5060408201516115cf6040850182611575565b5060608201516115e26060850182611584565b50505050565b60006115f48383611593565b60808301905092915050565b6000602082019050919050565b6000611618826114c3565b61162281856114ce565b935061162d836114df565b8060005b8381101561165e57815161164588826115e8565b975061165083611600565b925050600181019050611631565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008160010b9050919050565b6116d9816116c3565b82525050565b6040820160008201516116f560008501826116d0565b50602082015161170860208501826116d0565b50505050565b600061171a83836116df565b60408301905092915050565b6000602082019050919050565b600061173e82611697565b61174881856116a2565b9350611753836116b3565b8060005b8381101561178457815161176b888261170e565b975061177683611726565b925050600181019050611757565b5085935050505092915050565b600061179d8383611733565b905092915050565b6000602082019050919050565b60006117bd8261166b565b6117c78185611676565b9350836020820285016117d985611687565b8060005b8581101561181557848403895281516117f68582611791565b9450611801836117a5565b925060208a019950506001810190506117dd565b50829750879550505050505092915050565b60006040820190508181036000830152611841818561160d565b9050818103602083015261185581846117b2565b90509392505050565b61186781611545565b82525050565b6000602082019050611882600083018461185e565b92915050565b61189181610f59565b82525050565b60006020820190506118ac6000830184611888565b92915050565b600080604083850312156118c9576118c8610eb5565b5b60006118d785828601610f7e565b92505060206118e885828601610ee0565b9150509250929050565b6118fb81610ebf565b82525050565b600082825260208201905092915050565b600061191d82610ffb565b6119278185611901565b9350611937818560208601611017565b61194081611041565b840191505092915050565b600060408201905061196060008301856118f2565b81810360208301526119728184611912565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119c257607f821691505b6020821081036119d5576119d461197b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611a6c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a2f565b611a768683611a2f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611ab3611aae611aa984610ebf565b611a8e565b610ebf565b9050919050565b6000819050919050565b611acd83611a98565b611ae1611ad982611aba565b848454611a3c565b825550505050565b600090565b611af6611ae9565b611b01818484611ac4565b505050565b5b81811015611b2557611b1a600082611aee565b600181019050611b07565b5050565b601f821115611b6a57611b3b81611a0a565b611b4484611a1f565b81016020851015611b53578190505b611b67611b5f85611a1f565b830182611b06565b50505b505050565b600082821c905092915050565b6000611b8d60001984600802611b6f565b1980831691505092915050565b6000611ba68383611b7c565b9150826002028217905092915050565b611bbf82610ffb565b67ffffffffffffffff811115611bd857611bd7611185565b5b611be282546119aa565b611bed828285611b29565b600060209050601f831160018114611c205760008415611c0e578287015190505b611c188582611b9a565b865550611c80565b601f198416611c2e86611a0a565b60005b82811015611c5657848901518255600182019150602085019450602081019050611c31565b86831015611c735784890151611c6f601f891682611b7c565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cc282610ebf565b9150611ccd83610ebf565b9250828202611cdb81610ebf565b91508282048414831517611cf257611cf1611c88565b5b5092915050565b6000611d0482610ebf565b9150611d0f83610ebf565b9250828201905080821115611d2757611d26611c88565b5b92915050565b6000611d3882610ebf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d6a57611d69611c88565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611daf82610ebf565b9150611dba83610ebf565b925082611dca57611dc9611d75565b5b828204905092915050565b6000611df0611deb611de684610f59565b611a8e565b610ebf565b9050919050565b611e0081611dd5565b82525050565b6000602082019050611e1b6000830184611df7565b9291505056fea264697066735822122084d84fbcfbf0ab33626d927696c78cafafcb493aa62b7627927ae148a290e6ea64736f6c634300081c0033";

type EncodingTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EncodingTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EncodingTest__factory extends ContractFactory {
  constructor(...args: EncodingTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EncodingTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EncodingTest__factory {
    return super.connect(runner) as EncodingTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EncodingTestInterface {
    return new Interface(_abi) as EncodingTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EncodingTest {
    return new Contract(address, _abi, runner) as unknown as EncodingTest;
  }
}

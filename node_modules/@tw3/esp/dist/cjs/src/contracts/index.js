"use strict";
/*
 * Ethereum Storage Protocol (ESP) - Contract Utilities
 * Copyright (C) 2025 TechnicallyWeb3
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContractNames = exports.IDataPointStorage__factory = exports.IDataPointRegistry__factory = exports.DataPointStorage__factory = exports.DataPointRegistry__factory = exports.IDataPointStorageABI = exports.IDataPointRegistryABI = exports.DataPointStorageABI = exports.DataPointRegistryABI = void 0;
exports.getContractFactory = getContractFactory;
/**
 * ESP Contract Utilities
 *
 * Provides contract ABIs and deployment utilities for ESP contracts
 */
const types_1 = require("../types");
// Contract ABIs
exports.DataPointRegistryABI = types_1.DataPointRegistry__factory.abi;
exports.DataPointStorageABI = types_1.DataPointStorage__factory.abi;
exports.IDataPointRegistryABI = types_1.IDataPointRegistry__factory.abi;
exports.IDataPointStorageABI = types_1.IDataPointStorage__factory.abi;
// Contract Factories (for deployment and connection)
var types_2 = require("../types");
Object.defineProperty(exports, "DataPointRegistry__factory", { enumerable: true, get: function () { return types_2.DataPointRegistry__factory; } });
Object.defineProperty(exports, "DataPointStorage__factory", { enumerable: true, get: function () { return types_2.DataPointStorage__factory; } });
Object.defineProperty(exports, "IDataPointRegistry__factory", { enumerable: true, get: function () { return types_2.IDataPointRegistry__factory; } });
Object.defineProperty(exports, "IDataPointStorage__factory", { enumerable: true, get: function () { return types_2.IDataPointStorage__factory; } });
// Helper function to get contract factory by name
function getContractFactory(contractName) {
    switch (contractName) {
        case 'DataPointRegistry':
            return types_1.DataPointRegistry__factory;
        case 'DataPointStorage':
            return types_1.DataPointStorage__factory;
        case 'IDataPointRegistry':
            return types_1.IDataPointRegistry__factory;
        case 'IDataPointStorage':
            return types_1.IDataPointStorage__factory;
        default:
            throw new Error(`Unknown contract: ${contractName}`);
    }
}
// Contract names enum for type safety
var ContractNames;
(function (ContractNames) {
    ContractNames["DataPointRegistry"] = "DataPointRegistry";
    ContractNames["DataPointStorage"] = "DataPointStorage";
    ContractNames["IDataPointRegistry"] = "IDataPointRegistry";
    ContractNames["IDataPointStorage"] = "IDataPointStorage";
})(ContractNames || (exports.ContractNames = ContractNames = {}));
//# sourceMappingURL=index.js.map
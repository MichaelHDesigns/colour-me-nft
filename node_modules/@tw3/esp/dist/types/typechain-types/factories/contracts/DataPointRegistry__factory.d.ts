import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, BigNumberish, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { DataPointRegistry, DataPointRegistryInterface } from "../../contracts/DataPointRegistry";
type DataPointRegistryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DataPointRegistry__factory extends ContractFactory {
    constructor(...args: DataPointRegistryConstructorParams);
    getDeployTransaction(_owner: AddressLike, _dps: AddressLike, _royaltyRate: BigNumberish, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(_owner: AddressLike, _dps: AddressLike, _royaltyRate: BigNumberish, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<DataPointRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): DataPointRegistry__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506040516123a73803806123a783398181016040528101906100329190610506565b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c9190610568565b60405180910390fd5b6100b4816100da60201b60201c565b50600180819055506100cb8261019e60201b60201c565b806003819055505050506107af565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006040518060400160405280600881526020017f4450535f5445535400000000000000000000000000000000000000000000000081525090506000808373ffffffffffffffffffffffffffffffffffffffff16836040516024016102039190610613565b6040516020818303038152906040527fe8a4c04e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161028d9190610671565b6000604051808303816000865af19150503d80600081146102ca576040519150601f19603f3d011682016040523d82523d6000602084013e6102cf565b606091505b50915091508180156102e2575060208151145b15610402576000818060200190518101906102fd91906106be565b90506000859050610382858273ffffffffffffffffffffffffffffffffffffffff1663ffa1ad746040518163ffffffff1660e01b8152600401602060405180830381865afa158015610353573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103779190610724565b61043a60201b60201c565b82146103ba576040517f608ba60d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610434565b6040517f608ba60d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6000828260405160200161044f929190610787565b60405160208183030381529060405280519060200120905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061049d82610472565b9050919050565b6104ad81610492565b81146104b857600080fd5b50565b6000815190506104ca816104a4565b92915050565b6000819050919050565b6104e3816104d0565b81146104ee57600080fd5b50565b600081519050610500816104da565b92915050565b60008060006060848603121561051f5761051e61046d565b5b600061052d868287016104bb565b935050602061053e868287016104bb565b925050604061054f868287016104f1565b9150509250925092565b61056281610492565b82525050565b600060208201905061057d6000830184610559565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105bd5780820151818401526020810190506105a2565b60008484015250505050565b6000601f19601f8301169050919050565b60006105e582610583565b6105ef818561058e565b93506105ff81856020860161059f565b610608816105c9565b840191505092915050565b6000602082019050818103600083015261062d81846105da565b905092915050565b600081905092915050565b600061064b82610583565b6106558185610635565b935061066581856020860161059f565b80840191505092915050565b600061067d8284610640565b915081905092915050565b6000819050919050565b61069b81610688565b81146106a657600080fd5b50565b6000815190506106b881610692565b92915050565b6000602082840312156106d4576106d361046d565b5b60006106e2848285016106a9565b91505092915050565b600060ff82169050919050565b610701816106eb565b811461070c57600080fd5b50565b60008151905061071e816106f8565b92915050565b60006020828403121561073a5761073961046d565b5b60006107488482850161070f565b91505092915050565b60008160f81b9050919050565b600061076982610751565b9050919050565b61078161077c826106eb565b61075e565b82525050565b60006107938285610640565b915061079f8284610770565b6001820191508190509392505050565b611be9806107be6000396000f3fe6080604052600436106100dd5760003560e01c8063c4d1510d1161007f578063ef4e06ec11610059578063ef4e06ec14610282578063f2fde38b146102ad578063f6e20077146102d6578063fd45d70214610306576100dd565b8063c4d1510d14610205578063cc8e4f7014610230578063dbba0f0114610259576100dd565b80635f3ebd86116100bb5780635f3ebd861461015d578063715018a6146101865780638da5cb5b1461019d578063a31bae82146101c8576100dd565b80630ccbebf7146100e25780634030c1671461010b578063537782a214610134575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611349565b610343565b005b34801561011757600080fd5b50610132600480360381019061012d91906113ac565b610357565b005b34801561014057600080fd5b5061015b600480360381019061015691906113ec565b610376565b005b34801561016957600080fd5b50610184600480360381019061017f9190611530565b610388565b005b34801561019257600080fd5b5061019b6103fc565b005b3480156101a957600080fd5b506101b2610410565b6040516101bf919061157f565b60405180910390f35b3480156101d457600080fd5b506101ef60048036038101906101ea9190611349565b610439565b6040516101fc91906115a9565b60405180910390f35b34801561021157600080fd5b5061021a610482565b60405161022791906115a9565b60405180910390f35b34801561023c57600080fd5b50610257600480360381019061025291906115c4565b610488565b005b34801561026557600080fd5b50610280600480360381019061027b9190611604565b61059f565b005b34801561028e57600080fd5b506102976105c7565b6040516102a491906116b6565b60405180910390f35b3480156102b957600080fd5b506102d460048036038101906102cf9190611349565b6105f1565b005b6102f060048036038101906102eb919061178b565b610677565b6040516102fd91906117f6565b60405180910390f35b34801561031257600080fd5b5061032d60048036038101906103289190611811565b610cf9565b60405161033a91906115a9565b60405180910390f35b61034b610d26565b61035481610dad565b50565b61035f611043565b61036a338383611089565b6103726111cf565b5050565b61037e610d26565b8060038190555050565b610390610d26565b80600460008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050565b610404610d26565b61040e60006111d8565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60035481565b60006004600084815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610557578060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517fd008cefb00000000000000000000000000000000000000000000000000000000815260040161054e919061157f565b60405180910390fd5b818160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6105a7610d26565b6105af611043565b6105ba838383611089565b6105c26111cf565b505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105f9610d26565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361066b5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610662919061157f565b60405180910390fd5b610674816111d8565b50565b6000610681611043565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8a4c04e846040518263ffffffff1660e01b81526004016106dc91906118bd565b602060405180830381865afa1580156106f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071d91906118f4565b90506000600460008381526020019081526020016000209050600061074183610cf9565b90503373ffffffffffffffffffffffffffffffffffffffff168260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361081b5780600560008460010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461080d9190611950565b925050819055505050610ceb565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632be681f5856040518263ffffffff1660e01b815260040161087891906117f6565b602060405180830381865afa158015610895573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b99190611999565b03610b0657600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146109f95760005a9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343748b32876040518263ffffffff1660e01b815260040161095291906118bd565b6020604051808303816000875af1158015610971573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099591906118f4565b5060005a826109a491906119c6565b9050808460000181905550858460010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610a99565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343748b32866040518263ffffffff1660e01b8152600401610a5491906118bd565b6020604051808303816000875af1158015610a73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9791906118f4565b505b8160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837f4d17a9548ee6b6702f290ec91b514eba7c67a19e21e6c58a106cd0938d9e710c60405160405180910390a3610ce8565b600073ffffffffffffffffffffffffffffffffffffffff168260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ce75780341015610ba357806040517f261cdeee000000000000000000000000000000000000000000000000000000008152600401610b9a91906115a9565b60405180910390fd5b6000600a82610bb29190611a29565b90508082610bc091906119c6565b600560008560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c329190611950565b925050819055508060056000610c46610410565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c8f9190611950565b925050819055503373ffffffffffffffffffffffffffffffffffffffff16847f8bf49cf7f7d7eba63de731d07cd7aeb4e0a0c7673024fac32ef72decc3d3018984604051610cdd91906115a9565b60405180910390a3505b5b50505b610cf36111cf565b92915050565b60006003546004600084815260200190815260200160002060000154610d1f9190611a5a565b9050919050565b610d2e61129c565b73ffffffffffffffffffffffffffffffffffffffff16610d4c610410565b73ffffffffffffffffffffffffffffffffffffffff1614610dab57610d6f61129c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610da2919061157f565b60405180910390fd5b565b60006040518060400160405280600881526020017f4450535f5445535400000000000000000000000000000000000000000000000081525090506000808373ffffffffffffffffffffffffffffffffffffffff1683604051602401610e1291906118bd565b6040516020818303038152906040527fe8a4c04e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610e9c9190611ad8565b6000604051808303816000865af19150503d8060008114610ed9576040519150601f19603f3d011682016040523d82523d6000602084013e610ede565b606091505b5091509150818015610ef1575060208151145b1561100b57600081806020019051810190610f0c91906118f4565b90506000859050610f8b858273ffffffffffffffffffffffffffffffffffffffff1663ffa1ad746040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f869190611b28565b6112a4565b8214610fc3576040517f608ba60d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061103d565b6040517f608ba60d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60026001540361107f576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60008211156111ca57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461111d5781600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461111591906119c6565b925050819055505b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611163573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fbe560c2601ed812892278871b1fc744ae26d7983637db17b90fc0e21a9613cda846040516111c191906115a9565b60405180910390a35b505050565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600082826040516020016112b9929190611b8b565b60405160208183030381529060405280519060200120905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611316826112eb565b9050919050565b6113268161130b565b811461133157600080fd5b50565b6000813590506113438161131d565b92915050565b60006020828403121561135f5761135e6112e1565b5b600061136d84828501611334565b91505092915050565b6000819050919050565b61138981611376565b811461139457600080fd5b50565b6000813590506113a681611380565b92915050565b600080604083850312156113c3576113c26112e1565b5b60006113d185828601611397565b92505060206113e285828601611334565b9150509250929050565b600060208284031215611402576114016112e1565b5b600061141084828501611397565b91505092915050565b6000819050919050565b61142c81611419565b811461143757600080fd5b50565b60008135905061144981611423565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61149d82611454565b810181811067ffffffffffffffff821117156114bc576114bb611465565b5b80604052505050565b60006114cf6112d7565b90506114db8282611494565b919050565b6000604082840312156114f6576114f561144f565b5b61150060406114c5565b9050600061151084828501611397565b600083015250602061152484828501611334565b60208301525092915050565b60008060608385031215611547576115466112e1565b5b60006115558582860161143a565b9250506020611566858286016114e0565b9150509250929050565b6115798161130b565b82525050565b60006020820190506115946000830184611570565b92915050565b6115a381611376565b82525050565b60006020820190506115be600083018461159a565b92915050565b600080604083850312156115db576115da6112e1565b5b60006115e98582860161143a565b92505060206115fa85828601611334565b9150509250929050565b60008060006060848603121561161d5761161c6112e1565b5b600061162b86828701611334565b935050602061163c86828701611397565b925050604061164d86828701611334565b9150509250925092565b6000819050919050565b600061167c611677611672846112eb565b611657565b6112eb565b9050919050565b600061168e82611661565b9050919050565b60006116a082611683565b9050919050565b6116b081611695565b82525050565b60006020820190506116cb60008301846116a7565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156116f6576116f5611465565b5b6116ff82611454565b9050602081019050919050565b82818337600083830152505050565b600061172e611729846116db565b6114c5565b90508281526020810184848401111561174a576117496116d6565b5b61175584828561170c565b509392505050565b600082601f830112611772576117716116d1565b5b813561178284826020860161171b565b91505092915050565b600080604083850312156117a2576117a16112e1565b5b600083013567ffffffffffffffff8111156117c0576117bf6112e6565b5b6117cc8582860161175d565b92505060206117dd85828601611334565b9150509250929050565b6117f081611419565b82525050565b600060208201905061180b60008301846117e7565b92915050565b600060208284031215611827576118266112e1565b5b60006118358482850161143a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561187857808201518184015260208101905061185d565b60008484015250505050565b600061188f8261183e565b6118998185611849565b93506118a981856020860161185a565b6118b281611454565b840191505092915050565b600060208201905081810360008301526118d78184611884565b905092915050565b6000815190506118ee81611423565b92915050565b60006020828403121561190a576119096112e1565b5b6000611918848285016118df565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061195b82611376565b915061196683611376565b925082820190508082111561197e5761197d611921565b5b92915050565b60008151905061199381611380565b92915050565b6000602082840312156119af576119ae6112e1565b5b60006119bd84828501611984565b91505092915050565b60006119d182611376565b91506119dc83611376565b92508282039050818111156119f4576119f3611921565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611a3482611376565b9150611a3f83611376565b925082611a4f57611a4e6119fa565b5b828204905092915050565b6000611a6582611376565b9150611a7083611376565b9250828202611a7e81611376565b91508282048414831517611a9557611a94611921565b5b5092915050565b600081905092915050565b6000611ab28261183e565b611abc8185611a9c565b9350611acc81856020860161185a565b80840191505092915050565b6000611ae48284611aa7565b915081905092915050565b600060ff82169050919050565b611b0581611aef565b8114611b1057600080fd5b50565b600081519050611b2281611afc565b92915050565b600060208284031215611b3e57611b3d6112e1565b5b6000611b4c84828501611b13565b91505092915050565b60008160f81b9050919050565b6000611b6d82611b55565b9050919050565b611b85611b8082611aef565b611b62565b82525050565b6000611b978285611aa7565b9150611ba38284611b74565b600182019150819050939250505056fea2646970667358221220fe2244c5a8f066774c7f5e3c1e21c3336d35d3a4303dd0555bef26606e4a273264736f6c634300081c0033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_dps";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_royaltyRate";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "royaltyCost";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientRoyaltyPayment";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidDPS";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "publisher";
            readonly type: "address";
        }];
        readonly name: "InvalidPublisher";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "OwnableInvalidOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "OwnableUnauthorizedAccount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyGuardReentrantCall";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "dataPointAddress";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "publisher";
            readonly type: "address";
        }];
        readonly name: "DataPointRegistered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "publisher";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }];
        readonly name: "RoyaltiesCollected";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "dataPointAddress";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "payer";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "RoyaltiesPaid";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "DPS";
        readonly outputs: readonly [{
            readonly internalType: "contract IDataPointStorage";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_withdrawTo";
            readonly type: "address";
        }];
        readonly name: "collectRoyalties";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_dataPointAddress";
            readonly type: "bytes32";
        }];
        readonly name: "getDataPointRoyalty";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_dataPoint";
            readonly type: "bytes";
        }, {
            readonly internalType: "address";
            readonly name: "_publisher";
            readonly type: "address";
        }];
        readonly name: "registerDataPoint";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "dataPointAddress";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_publisher";
            readonly type: "address";
        }];
        readonly name: "royaltyBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "royaltyRate";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_dps";
            readonly type: "address";
        }];
        readonly name: "setDPS";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_royaltyRate";
            readonly type: "uint256";
        }];
        readonly name: "setRoyaltyRate";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_publisher";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }];
        readonly name: "transfer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_dataPointAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "_newPublisher";
            readonly type: "address";
        }];
        readonly name: "updatePublisherAddress";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_dataPointAddress";
            readonly type: "bytes32";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "gasUsed";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "publisher";
                readonly type: "address";
            }];
            readonly internalType: "struct DataPointRoyalty";
            readonly name: "_dataPointRoyalty";
            readonly type: "tuple";
        }];
        readonly name: "updateRoyaltyRecord";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): DataPointRegistryInterface;
    static connect(address: string, runner?: ContractRunner | null): DataPointRegistry;
}
export {};
//# sourceMappingURL=DataPointRegistry__factory.d.ts.map